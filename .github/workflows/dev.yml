name: Docker images dev build

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "main"

env:
  IMAGE_ORG: 'throwtheswitch'
  IMAGE_BASE_NAME: 'madsciencelab'


jobs:
  # Jobs organized for concurrent Docker image builds
  # Jobs only build :latest images without pushing to Docker Hub

  # This is a workaround to the limitation that an `env:` map cannot reference the `env:` map to create additional environment variables
  image-details:
    runs-on: ubuntu-latest
    steps:
      # A step must be present in order to make use of `outputs:`
       - run: echo "Setting Docker image details..."
    outputs:
      base-name: 'madsciencelab'
      base-url: 'throwtheswitch/madsciencelab'

  madsciencelab:
    runs-on: ubuntu-latest
    needs: [image-details]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      IMAGE_NAME: ${{ needs.image-details.outputs.base-name }}
      # Cannot reference IMAGE_NAME as it does not exist yet
      IMAGE_URL: ${{ needs.image-details.outputs.base-url }}

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to Docker Hub'
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker image: madsciencelab
      # Note: standard/ directory maps to madsciencelab image (no variants)
      - name: 'Build Docker image ${{ env.IMAGE_NAME }}'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: build/standard/docker/Dockerfile
          build-args: |
            CONTAINER_VERSION=${{ github.ref_name }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_URL }}:latest

  madsciencelab-plugins:
    runs-on: ubuntu-latest
    needs: [image-details]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      VARIANT: 'plugins'
      # Cannot reference VARIANT as it does not exist yet
      IMAGE_NAME: ${{ needs.image-details.outputs.base-name }}-plugins
      # Cannot reference IMAGE_NAME as it does not exist yet
      IMAGE_URL: ${{ needs.image-details.outputs.base-url }}-plugins

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to Docker Hub'
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker image: madsciencelab-plugins
      - name: 'Build Docker image ${{ env.IMAGE_NAME }}'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: build/${{ env.VARIANT }}/docker/Dockerfile
          build-args: |
            CONTAINER_VERSION=${{ github.ref_name }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_URL }}:latest

  madsciencelab-arm-none-eabi:
    runs-on: ubuntu-latest
    needs: [image-details]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      VARIANT: 'arm-none-eabi'
      # Cannot reference VARIANT as it does not exist yet
      IMAGE_NAME: ${{ needs.image-details.outputs.base-name }}-arm-none-eabi
      # Cannot reference IMAGE_NAME as it does not exist yet
      IMAGE_URL: ${{ needs.image-details.outputs.base-url }}-arm-none-eabi

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to Docker Hub'
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker image: madsciencelab-arm-none-eabi
      - name: 'Build Docker image ${{ env.IMAGE_NAME }}'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: build/${{ env.VARIANT }}/docker/Dockerfile
          build-args: |
            CONTAINER_VERSION=${{ github.ref_name }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}            
          tags: ${{ env.IMAGE_URL }}:latest

  madsciencelab-arm-none-eabi-plugins:
    runs-on: ubuntu-latest
    needs: [image-details]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      VARIANT: 'arm-none-eabi-plugins'
      # Cannot reference VARIANT as it does not exist yet
      IMAGE_NAME: ${{ needs.image-details.outputs.base-name }}-arm-none-eabi-plugins
      # Cannot reference IMAGE_NAME as it does not exist yet
      IMAGE_URL: ${{ needs.image-details.outputs.base-url }}-arm-none-eabi-plugins

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to Docker Hub'
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker image: madsciencelab-arm-none-eabi-plugins
      - name: 'Build Docker image ${{ env.IMAGE_NAME }}'
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: build/${{ env.VARIANT }}/docker/Dockerfile
          build-args: |
            CONTAINER_VERSION=${{ github.ref_name }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}            
          tags: ${{ env.IMAGE_URL }}:latest

  dockerfiles-prerelease:
    runs-on: ubuntu-latest
    needs: [madsciencelab, madsciencelab-plugins, madsciencelab-arm-none-eabi, madsciencelab-arm-none-eabi-plugins]
    prerelease: true
    permissions:
      contents: write

    steps:
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "build/*/docker/Dockerfile"

